<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/mikae/OneDrive/Dokument/SQLite/Databases/Covid Data.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="browser structure pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="12707"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,27:mainPercentPopulationVaccinated"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="101"/><column index="2" value="108"/><column index="3" value="112"/><column index="4" value="109"/><column index="5" value="120"/><column index="6" value="126"/><column index="7" value="123"/><column index="8" value="235"/><column index="9" value="139"/><column index="10" value="136"/><column index="11" value="248"/><column index="12" value="254"/><column index="13" value="251"/><column index="14" value="300"/><column index="15" value="267"/><column index="16" value="264"/><column index="17" value="300"/><column index="18" value="197"/><column index="19" value="137"/><column index="20" value="265"/><column index="21" value="155"/><column index="22" value="283"/><column index="23" value="251"/><column index="24" value="300"/><column index="25" value="269"/><column index="26" value="300"/></column_widths><filter_values><column index="3" value="lowe "/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">
-- CovidDeaths Table

SELECT
	*
FROM
	CovidDeaths


-- Selecting Data that I will be using

SELECT
	location,
	date,
	total_cases,
	new_cases,
	total_deaths,
	population
FROM
	CovidDeaths d
WHERE
	continent IS NOT NULL
ORDER BY
	1, 2
	
-- Looking at Total Cases vs Total Deaths
-- Shows the likelihood of dying if you contract COVID in your (or others) country

SELECT
	location,
	date,
	total_cases,
	total_deaths,
	(total_deaths/total_cases)*100 AS [DeathPercentage]
FROM
	CovidDeaths d
WHERE
	location = 'Sweden' -- Can be filtered to your desired location
ORDER BY
	1, 2

-- Looking at Total Cases vs population
-- Shows what percentage of population got COVID

SELECT
	location,
	date,
	population,
	total_cases,
	(total_cases/population)*100 AS [PercentPopulationInfected]
FROM
	CovidDeaths d
WHERE
	location = 'Sweden' -- Can be filtered to your desired location
ORDER BY
	1, 2
	
-- Looking at Countries with the Highest Infection rates compared to population


SELECT
	location,
	population,
	MAX(total_cases) AS [HighestInfectionCount],
	ROUND(MAX((total_cases * 100.0 / population)), 2) AS [PercentPopulationInfected] -- In this case I can use ROUND to limit the decimals without it affecting the information
FROM
	CovidDeaths d
WHERE
	continent IS NOT NULL
GROUP BY
	location,
	population
ORDER BY
	PercentPopulationInfected DESC
	
-- Showing Countries with the Highest Death Count by population

SELECT
	location,
	MAX(CAST(total_deaths AS INT)) AS [TotalDeathCount] -- Converting NVARCHAR to INTEGER
FROM
	CovidDeaths d
WHERE
	continent IS NOT NULL -- Eliminating the data that has NULL as Continent to avoid confusion
GROUP BY
	location
ORDER BY
	TotalDeathCount DESC
	

-- LET'S BREAK THINGS DOWN BY CONTINENT
-- Some data may be higher/lower than the specific total but the hierarchy is correct

-- Showing continents with the Highest Death Count

SELECT
	location,
	MAX(CAST(total_deaths AS INT)) AS [TotalDeathCount]
FROM
	CovidDeaths d
WHERE
	continent IS NULL
GROUP BY
	location
ORDER BY
	TotalDeathCount DESC
	

-- GLOBAL NUMBERS

SELECT
	date,
	SUM(new_cases) AS [total_cases],
	SUM(CAST(new_deaths AS INT)) AS [total_deaths],
	SUM(CAST(new_deaths AS INT))/(SUM(new_cases)*100) AS [DeathPercentage]
FROM
	CovidDeaths d
WHERE
	continent IS NOT NULL
GROUP BY
	date
ORDER BY
	1, 2


-- Looking at Total Population vs Vaccinations
	
-- CTE
WITH PopVsVac
	(continent,
	location,
	date,
	population,
	new_vaccinations,
	RollingPeopleVaccinated)
AS
(SELECT
	d.continent,
	d.location,
	d.date,
	d.population,
	v.new_vaccinations,
	SUM(CAST(v.new_vaccinations AS INT)) 
	OVER (PARTITION BY d.location ORDER BY d.location, d.date) AS [RollingPeopleVaccinated]
	-- (RollingPeopleVaccinated/population)*100
FROM
	CovidDeaths d
JOIN
	CovidVaccinations v
ON
	d.location = v.location
AND
	d.date = v.date
WHERE
	d.continent IS NOT NULL
--ORDER BY
	--2,3
)
SELECT
	*, (RollingPeopleVaccinated/population)*100
FROM
	PopVsVac

-- Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated
AS
SELECT
	d.continent,
	d.location,
	d.date,
	d.population,
	v.new_vaccinations,
	SUM(CAST(v.new_vaccinations AS INT)) 
	OVER (PARTITION BY d.location ORDER BY d.location, d.date) AS [RollingPeopleVaccinated]
	-- (RollingPeopleVaccinated/population)*100
FROM
	CovidDeaths d
JOIN
	CovidVaccinations v
ON
	d.location = v.location
AND
	d.date = v.date
WHERE
	d.continent IS NOT NULL

</sql><current_tab id="0"/></tab_sql></sqlb_project>
